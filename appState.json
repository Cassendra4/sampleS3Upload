{"EDITOR_STATE":{"allProjectFiles":{"4812c341-c21d-42f4-8509-d717ebba4b7c":{"id":"4812c341-c21d-42f4-8509-d717ebba4b7c","parent":null,"name":"sampleS3Upload","type":"DIRECTORY","isDirectory":true,"children":["3678b8bf-03b8-489e-9f31-0bd0d0fff6c9"],"isRemovable":false,"filePath":"sampleS3Upload"},"3678b8bf-03b8-489e-9f31-0bd0d0fff6c9":{"id":"3678b8bf-03b8-489e-9f31-0bd0d0fff6c9","parent":"4812c341-c21d-42f4-8509-d717ebba4b7c","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"sampleS3Upload/lambda.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\n\n\tlet encodedImage = JSON.parse(event.body).user_avatar;\n\tlet decodedImage = Buffer.from(encodedImage, 'base64');\n\n\tvar filePath = \"avatars/\" + event.pathParameters.username + \".jpg\"\n\n\ts3.putObject({\n\t\t\"Body\": encodedImage,\n\t\t\"Bucket\": \"upload-to-s3-sample\",\n\t\t\"Key\": filePath\n\t})\n\t\t.promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\tlet response = {\n\t\t\t\t\"statusCode\": 200,\n\t\t\t\t\"headers\": {\n\t\t\t\t\t\"my_header\": \"my_value\"\n\t\t\t\t},\n\t\t\t\t\"body\": JSON.stringify(data),\n\t\t\t\t\"isBase64Encoded\": false\n\t\t\t};\n\t\t\tcallback(null, response);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred'\n\t\t\tcallback(err, null);\n\t\t});\n\n}","triggers":[{"resourceName":"apigusEast1SigmaS3SmapleuploadS3post","config":{}}],"version":15}},"rootNode":"4812c341-c21d-42f4-8509-d717ebba4b7c","openFiles":["3678b8bf-03b8-489e-9f31-0bd0d0fff6c9"],"currentFileId":"3678b8bf-03b8-489e-9f31-0bd0d0fff6c9","resources":{"apigusEast1SigmaS3SmapleuploadS3post":{"name":"apigusEast1SigmaS3SmapleuploadS3post","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":1,"apiName":"SigmaS3Smaple","apiId":"3knx67qdgi","endpointType":"EDGE","rootResourceId":"kfbgq8yg62","existingResources":{"/":"kfbgq8yg62","/upload-to-s3":"zsf6at"},"resourceMode":0,"resourceName":"upload-s3","resourcePath":"/upload-s3","restMethod":"POST","proxyIntegration":false,"enableCORS":false,"stageMode":1,"stageName":"prod","stageDeploymentId":"jtrs87"},"globallyEditable":true},"s3uploadToS3Sample":{"name":"s3uploadToS3Sample","type":"S3","config":{"mode":1,"bucket":{"region":"us-east-1","name":"upload-to-s3-sample"}},"globallyEditable":false}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"}}},"lambdaId":"3678b8bf-03b8-489e-9f31-0bd0d0fff6c9","additionalFiles":[]},"PROJECT_META":{"projectName":"sampleS3Upload","projectDescription":"","projectVersion":"1.0.0","repoName":"sampleS3Upload","repoUrl":"https://github.com/Cassendra4/sampleS3Upload","projectRegion":"us-east-1","lastSave":1519730331631}}